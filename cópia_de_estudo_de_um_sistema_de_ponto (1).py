# -*- coding: utf-8 -*-
"""Cópia de Estudo de um sistema de ponto.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qT217_FgLneB8_oY5nnfz6THvgjKP3eb
"""

import streamlit as st
import pandas as pd
from datetime import datetime
from zoneinfo import ZoneInfo

st.set_page_config(page_title="Registro de Ponto", page_icon="🕒")
st.title("🕒 Sistema de Registro de Ponto")

# Dados de colaboradores e seus códigos
colaboradores = {
    "Fernando": 33,
    "Gustavo": 44,
    "Clara": 45,
    "Eveline": 56,
    "Valmir": 37
}

# Transformar o dicionário em DataFrame e adicionar colunas de horários
Dados = pd.DataFrame(list(colaboradores.items()), columns=['Nome', 'Codigo'])
colunas_ponto = [
    "Data", "Entrada", "Horário de saída", "Horário de volta do almoço",
    "Horário de saída não programada", "Horário de volta da saída não programada", "Saída"
]
for coluna in colunas_ponto:
    if coluna not in Dados.columns:
        Dados[coluna] = ""

# Usar estado de sessão para reiniciar sem recarregar a página
if "registrado" not in st.session_state:
    st.session_state.registrado = False

if not st.session_state.registrado:
    codigo = st.number_input("Insira seu código de colaborador:", step=1, format="%d")

    # Verifica se o código existe
    Lista_de_codigos = Dados["Codigo"].values
    if codigo in Lista_de_codigos:
        nome = Dados.loc[Dados["Codigo"] == codigo, "Nome"].values[0]
        st.success(f"Bem-vindo, {nome}!")

        confirma = st.radio("Confirma seu nome?", ["Sim", "Não"])

        if confirma == "Sim":
            opcao = st.selectbox("Escolha uma opção:", [
                "1 - Entrada",
                "2 - Saída para o almoço",
                "3 - Volta para o almoço",
                "4 - Saída não programada",
                "5 - Volta da saída não programada",
                "6 - Saída"
            ])

            if st.button("Registrar"):
                agora = datetime.now(ZoneInfo("America/Sao_Paulo"))
                data = agora.date().strftime("%d/%m/%Y")
                hora = agora.time().strftime("%H:%M:%S")

                Dados.loc[Dados["Codigo"] == codigo, "Data"] = data

                campos = {
                    "1": "Entrada",
                    "2": "Horário de saída",
                    "3": "Horário de volta do almoço",
                    "4": "Horário de saída não programada",
                    "5": "Horário de volta da saída não programada",
                    "6": "Saída"
                }

                campo_selecionado = campos[opcao.split(" ")[0]]
                Dados.loc[Dados["Codigo"] == codigo, campo_selecionado] = hora
                st.success(f"{campo_selecionado} registrada com sucesso às {hora}!")

                # Salvar CSV atualizado
                Dados.to_csv("dados_colaboradores.csv", index=False)

                # Marca que foi registrado
                st.session_state.registrado = True

        else:
            st.warning("Por favor, contate o PCP para corrigir o código.")

    else:
        if codigo != 0:
            st.error("Código não encontrado. Tente novamente.")
else:
    # Interface pós-registro
    st.success("Registro concluído.")
    if st.button("Registrar outro colaborador"):
        st.session_state.registrado = False